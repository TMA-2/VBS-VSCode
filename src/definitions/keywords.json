{
  "ByRef": {
    "documentation": "Indicates that an argument is passed by reference to a procedure."
  },
  "ByVal": {
    "documentation": "Indicates that an argument is passed by value to a procedure."
  },
  "Call": {
    "documentation": "Transfers control to a Sub procedure or Function procedure"
  },
  "Class": {
    "documentation": "Declares the name of a class, as well as a definition of the variables, properties, and methods that comprise the class."
  },
  "Const": {
    "documentation": "Declares constants for use in place of literal values."
  },
  "Dim": {
    "documentation": "Declares variables and allocates storage space."
  },
  "Do": {
    "documentation": "Repeats a block of statements while a condition is True or until a condition becomes True."
  },
  "Each": {
    "documentation": "Used with For to iterate through the elements of an array or collection."
  },
  "Else": {
    "documentation": "Introduces a group of statements to be executed if the condition in an If statement is False."
  },
  "End": {
    "documentation": "Ends a procedure or block."
  },
  "Erase": {
    "documentation": "Reinitializes the elements of fixed-size arrays and releases dynamic array storage space."
  },
  "Execute": {
    "documentation": "Executes one or more specified statements."
  },
  "ExecuteGlobal": {
    "documentation": "Executes one or more specified statements in the global namespace of the script."
  },
  "Exit": {
    "documentation": "Exits a block of Do...Loop, For...Next, Function, or Sub code."
  },
  "For": {
    "documentation": "Repeats a group of statements a specified number of times."
  },
  "Function": {
    "documentation": "Declares the name, arguments, and code that form the body of a Function procedure."
  },
  "If": {
    "documentation": "Conditionally executes a group of statements, depending on the value of an expression."
  },
  "In": {
    "documentation": "Used with For Each to iterate through the elements of an array or collection."
  },
  "Loop": {
    "documentation": "Marks the end of a Do...Loop statement block."
  },
  "New": {
    "documentation": "Creates a new instance of an object."
  },
  "Next": {
    "documentation": "Marks the end of a For...Next statement block."
  },
  "Option Explicit": {
    "documentation": "Used at script level to force explicit declaration of all variables in that script."
  },
  "On Error Resume Next": {
    "documentation": "Specifies that when a run-time error occurs, control goes to the statement immediately following the statement where the error occurred and execution continues"
  },
  "On Error Goto 0": {
    "documentation": "Disables any enabled error handler in the current procedure."
  },
  "Redim Preserve": {
    "documentation": "Reallocates storage space for a dynamic array variable while preserving the existing data."
  },
  "Property": {
    "documentation": "Declares the name of a property and the property procedures used to store and retrieve its value."
  },
  "Property Get": {
    "documentation": "Property procedure, which gets the value of a property."
  },
  "Property Let": {
    "documentation": "Property procedure, which assigns a value to a property."
  },
  "Property Set": {
    "documentation": "Property procedure, which sets a reference to an object."
  },
  "Private": {
    "documentation": "Declares private variables or procedures that are accessible only to the script where they are declared."
  },
  "Public": {
    "documentation": "Declares public variables or procedures that are accessible to all other procedures in all scripts."
  },
  "Randomize": {
    "documentation": "Initializes the random-number generator."
  },
  "ReDim": {
    "documentation": "Used at the procedure level to reallocate storage space for dynamic array variables."
  },
  "Rem": {
    "documentation": "Indicates that the following text is a comment (remark) in the script."
  },
  "Select Case": {
    "documentation": "Executes one of several groups of statements, depending on the value of an expression."
  },
  "Stop": {
    "documentation": "Suspends execution of the script."
  },
  "Step": {
    "documentation": "Amount counter is changed each time through the loop. If not specified, step defaults to one."
  },
  "Sub": {
    "documentation": "Declares the name, arguments, and code that form the body of a Sub procedure."
  },
  "Then": {
    "documentation": "Introduces a statement block to be executed if a condition in an If statement is True."
  },
  "To": {
    "documentation": "Separates the beginning and ending values of a loop counter or array indices."
  },
  "Until": {
    "documentation": "Specifies that the loop should continue until the condition becomes True."
  },
  "Wend": {
    "documentation": "Marks the end of a While...Wend statement block."
  },
  "While": {
    "documentation": "Executes a series of statements as long as a given condition is True."
  },
  "With": {
    "documentation": "Executes a series of statements on a single object or user-defined type."
  }
}